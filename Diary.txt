['SVC_C1_rbf','SVC_C0025_linear','SVC_C1_linear','SVC_C2_linear', 'SVC_d2_poly','SVC_d3_poly','SVC_sigmoid']


# 24 IMAGES (12 TRAIN,12 TEST) 

			31th DEC

- SVC CLASSIFIER SVM.SVC (DEFAULT VALUES) http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC 
mean_score_prob= 0.57353583319
mean_score_nms= 0.559535494437

mean_score_prob= 0.57353583319
mean_score_nms= 0.563696784759


mean_score_prob= 0.57353583319
mean_score_nms= 0.469188356683



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

test_cls=['RandomForest','KNeighborsClassifier','SVC']
test_overlap_threshold_nms=[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8 ,0.9]

[[ 0.58067663  0.58021164  0.5542442 ]
 [ 0.48601294  0.58021164  0.55953549]
 [ 0.58875908  0.58021164  0.56369678]
 [ 0.56591653  0.58021164  0.55953549]
 [ 0.57770407  0.58021164  0.56369678]
 [ 0.58570388  0.58021164  0.5515432 ]
 [ 0.58005473  0.58021164  0.56369678]
 [ 0.525839    0.58021164  0.56369678]
 [ 0.57471191  0.58021164  0.57495828]]


test_cls=['RandomForest','KNeighborsClassifier','SVC','AdaBoostClassifier','GaussianNB','LinearDiscriminantAnalysis','QuadraticDiscriminantAnalysis']
    test_overlap_threshold_nms=[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8 ,0.9]

[[ 0.57694416  0.58021164  0.56369678  0.60151162  0.40589701  0.          0.        ]
 [ 0.59429534  0.58021164  0.55953549  0.60151162  0.40589701  0.          0.        ]
 [ 0.56949922  0.58021164  0.49242707  0.60151162  0.40589701  0.          0.        ]
 [ 0.57781526  0.58021164  0.48523338  0.60151162  0.40589701  0.          0.        ]
 [ 0.59489163  0.58021164  0.55953549  0.60151162  0.40589701  0.          0.        ]
 [ 0.5296101   0.58021164  0.48523338  0.60151162  0.41546262  0.          0.        ]
 [ 0.59129948  0.58021164  0.46609819  0.60151162  0.47895002  0.          0.        ]
 [ 0.49862622  0.58021164  0.54464411  0.60151162  0.43900168  0.          0.        ]
 [ 0.59465985  0.58021164  0.56874343  0.60151162  0.43095328  0.          0.        ]]


test_cls=['LinearDiscriminantAnalysis','QuadraticDiscriminantAnalysis']
test_overlap_threshold_nms=[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8 ,0.9]

[[ 0.4798185   0.        ]
 [ 0.4798185   0.        ]
 [ 0.4798185   0.        ]
 [ 0.4798185   0.        ]
 [ 0.4798185   0.        ]
 [ 0.4798185   0.        ]
 [ 0.4798185   0.        ]
 [ 0.52633948  0.        ]
 [ 0.5350265   0.        ]]




PENDIENTE

- curvas PRECISION/RECALL
- download wordmat

PREGUNTAS
- por qué QDA no funciona
- qué es la rbf de svc kernel
- por qué AdaBoost y KN son constantes
- como poner curvas roc

	
TABLE COMPARING NMS_SCORES AND PROB_SCORES


my_score_matrix_nms
[[ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.56369678  0.5515432   0.60680291  0.60004835
   0.45302375  0.55629491  0.          0.23374341  0.47072892  0.53267735
   0.58863124  0.55896419]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.55953549  0.57353583  0.60004835  0.60004835
   0.27728719  0.55629491  0.          0.32106783  0.54852867  0.50166085
   0.59111094  0.60501895]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.49242707  0.55953549  0.60004835  0.60004835
   0.4903744   0.55629491  0.          0.35136665  0.33640798  0.55002418
   0.53729938  0.59350221]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.5515432   0.55953549  0.60004835  0.60004835
   0.41215466  0.55629491  0.          0.4296376   0.46359905  0.5081351
   0.59935995  0.57456157]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.48523338  0.57290472  0.60680291  0.60004835
   0.4903744   0.55629491  0.          0.38964823  0.44947786  0.546661
   0.59812987  0.60592087]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.56369678  0.55953549  0.60004835  0.60004835
   0.50111985  0.55629491  0.          0.34875188  0.58083217  0.46953459
   0.58920197  0.5857112 ]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.55953549  0.57353583  0.60680291  0.60680291
   0.4317558   0.55629491  0.          0.35720332  0.49222344  0.48627971
   0.59030735  0.59728427]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.53921179  0.57353583  0.60680291  0.60004835
   0.48771257  0.55629491  0.          0.11209535  0.54983874  0.48466766
   0.59332393  0.53192711]
 [ 0.33737008  0.53781582  0.58021164  0.5859107   0.58606455  0.59149686
   0.60702625  0.5960793   0.56345214  0.56874343  0.60680291  0.60680291
   0.41945946  0.55629491  0.          0.2991163   0.55177823  0.57297229
   0.5549838   0.59958663]]


BEST: K NEIGHBORS K=30 --> SCORE= 0.60702625  

my_score_matrix_prob
[[ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.25596688  0.531398    0.53267735
   0.59392253  0.55896419]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.41158009  0.55956124  0.49386378
   0.59640223  0.60501895]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.42530318  0.38788399  0.55568318
   0.53729938  0.59350221]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.49121876  0.56046944  0.5081351
   0.59935995  0.57456157]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.30104345  0.45538695  0.56232843
   0.59812987  0.60592087]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.51808264  0.58864802  0.48465865
   0.58920197  0.5857112 ]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.48101683  0.52380892  0.48627971
   0.59030735  0.59728427]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.25014959  0.54983874  0.53480139
   0.59332393  0.53192711]
 [ 0.43807073  0.60084976  0.60159393  0.60680291  0.59149686  0.59149686
   0.60702625  0.5960793   0.57353583  0.57353583  0.60004835  0.60004835
   0.51938575  0.55629491  0.          0.38508637  0.58146385  0.57566135
   0.5549838   0.59958663]]



BEST: K NEIGHBORS K=30 --> SCORE= 0.60702625  

['KNeighborsClassifier_k1', 'KNeighborsClassifier_k5', 'KNeighborsClassifier_k10', 
'KNeighborsClassifier_k12', 'KNeighborsClassifier_k20', 'KNeighborsClassifier_k24',
 'KNeighborsClassifier_k30', 'KNeighborsClassifier_k50', 'SVC_C1_rbf',
 'SVC_C0025_linear', 'SVC_C1_linear', 'SVC_C2_linear',
 'SVC_d2_poly', 'SVC_d3_poly', 'SVC_sigmoid', 
'RandomForest_1', 'RandomForest_3', 'RandomForest_5',
 'RandomForest_10', 'RandomForest_20']


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% VARYING STEP_SIZE

scores_per_cls=
[[ 0.47747578  0.52539506  0.60282856  0.60282856  0.25126849  0.55651116
   0.          0.47453661  0.45291091  0.4943792   0.4930298   0.49361804
   0.49598925  0.50637757  0.5222742 ]
 [ 0.43781691  0.38453195  0.5457461   0.5457461   0.45874595  0.55576023
   0.          0.43622989  0.47979826  0.51014308  0.53113586  0.53503827
   0.54837702  0.56225822  0.59009646]
 [ 0.47929577  0.56369678  0.60004835  0.60004835  0.42132703  0.55629491
   0.          0.33737008  0.53781582  0.58021164  0.5859107   0.58606455
   0.59149686  0.60702625  0.5960793 ]]

scores_per_cls=
[[ 0.27479954  0.54237286  0.5244023   0.53186141  0.59030276]
 [ 0.378194    0.50167244  0.57273542  0.60070669  0.60189825]
 [ 0.37657315  0.58582466  0.56751337  0.54993503  0.59894297]]

 test_cls=['SVC_C1_rbf','SVC_C0025_linear','SVC_C1_linear','SVC_C2_linear', 
'SVC_d2_poly','SVC_d3_poly','SVC_sigmoid','KNeighborsClassifier_k1','KNeighborsClassifier_k5',
'KNeighborsClassifier_k10','KNeighborsClassifier_k12','KNeighborsClassifier_k20',
'KNeighborsClassifier_k24','KNeighborsClassifier_k30','KNeighborsClassifier_k50']
 test_cls=['RandomForest_1','RandomForest_3','RandomForest_5','RandomForest_10', 'RandomForest_20']

BEST RESULT: K NEIGHBORS K=30 --> SCORE=0.60702625   (STEP=10)

WE THOUGHT THE LESS SIZE THE BETTER--- BUT IT MAY ACTUALLY ADD NOISE TO THE HOGs

  